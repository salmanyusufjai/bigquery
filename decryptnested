-- Step 1: Flatten the nested structure and include an identifier for the original rows
WITH flattened_data AS (
  SELECT
    t.*,
    mainf.decryption_key,
    account.latest AS account_latest,
    OFFSET AS row_index
  FROM
    `your_dataset.your_table` t,
    UNNEST(account.latest) AS account_latest WITH OFFSET
),

-- Step 2: Decrypt the fields in rawfields using the decryption key from mainf
decrypted_data AS (
  SELECT
    original_json,
    mainf,
    account,
    subject,
    row_index,
    account_latest,
    (
      SELECT AS STRUCT
        ARRAY(
          SELECT
            STRUCT(
              REGEXP_EXTRACT(pair, r'^([^:]+)') AS key,
              CASE
                WHEN REGEXP_EXTRACT(pair, r'^([^:]+)') = 'f1' THEN DECRYPT_STRING(REGEXP_EXTRACT(pair, r':\s*"([^"]+)"'), mainf.decryption_key)
                ELSE REGEXP_EXTRACT(pair, r':\s*"([^"]+)"')
              END AS value
            )
          FROM UNNEST(REGEXP_EXTRACT_ALL(TO_JSON_STRING(account_latest.rawfields), r'"([^"]+)":\s*"([^"]*)"')) AS pair
        ) AS rawfields,
        account_latest.stdfields
    ) AS decrypted_account_latest
  FROM
    flattened_data
),

-- Step 3: Reassemble the nested structure with decrypted fields
reassembled_data AS (
  SELECT
    mainf,
    subject,
    ARRAY_AGG(
      STRUCT(
        (SELECT AS STRUCT ARRAY(
          SELECT AS STRUCT key, value
          FROM UNNEST(
            SELECT ARRAY(
              SELECT STRUCT(key, value)
              FROM UNNEST(REGEXP_EXTRACT_ALL(TO_JSON_STRING(decrypted_account_latest.rawfields), r'"([^"]+)":\s*"([^"]*)"')) AS pair
            )
          ) AS r
        )) AS rawfields,
        decrypted_account_latest.stdfields AS stdfields
      ) ORDER BY row_index
    ) AS latest
  FROM
    decrypted_data
  GROUP BY
    mainf, subject
)

-- Step 4: Select the final structure maintaining the original format
SELECT
  TO_JSON_STRING(
    STRUCT(
      mainf,
      STRUCT(latest AS latest) AS account,
      subject,
      JSON_EXTRACT(t, '$') AS other_objects -- Include all other objects dynamically
    )
  ) AS final_json
FROM
  reassembled_data t;
